.mobileNavBar{-webkit-animation-delay:3.5s;animation-delay:3.5s;-webkit-animation-duration:1s;animation-duration:1s;background-color:#333;width:100%;height:65px;border:1px solid #000;position:absolute;top:0;left:0}@media only screen and (min-width:568px){.mobileNavBar{display:none}}.mobileNavBar .blogButton{position:absolute;top:12px;left:15px}.mobileNavBar .blogButton button{color:#fff}.mobileNavBar .hamburgerIcon{position:absolute;top:8px;right:10px}.mobileNavBar .hamburgerIcon i{color:#fff;border:2px solid #fff;border-radius:7px;padding:0 5px;font-size:2.75em}.mobileNavBar .dropdownMenu{width:100%;background-color:#646464;position:relative;top:65px;text-align:center;padding:10px 0 0}.mobileNavBar .dropdownMenu a,.mobileNavBar .dropdownMenu li,.mobileNavBar .dropdownMenu li:active,.mobileNavBar .dropdownMenu li:hover,.mobileNavBar .dropdownMenu ul{color:#fff;text-decoration:none;list-style-type:none}.mobileNavBar .dropdownMenu li{padding:0 0 10px;border:1px solid transparent;border-bottom-color:#333}.centerText{width:100%;position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);text-align:center}.centerText h1{-webkit-animation-duration:1.5s;animation-duration:1.5s}@media only screen and (max-width:755px){.centerText h1{font-size:3em;position:relative;top:20px}}@media only screen and (min-width:756px){.centerText h1{font-size:6em;position:relative;top:25px}}.centerText h2{-webkit-animation-delay:1.5s;animation-delay:1.5s;-webkit-animation-duration:1s;animation-duration:1s}@media only screen and (max-width:755px){.centerText h2{font-size:1.3em;position:relative;top:5px}}@media only screen and (min-width:756px){.centerText h2{font-size:1.6em}}.centerText h1,.centerText h2{color:#fff}.centerText hr{margin:auto}@media only screen and (max-width:755px){.centerText hr{width:90%}}@media only screen and (min-width:756px){.centerText hr{width:45em}}.centerText i{color:#fff}@media only screen and (max-width:755px){.centerText i{margin:10px 15px}}@media only screen and (min-width:756px){.centerText i{margin:25px 35px}}.centerText i:hover{color:gray}.centerText .links{-webkit-animation-delay:2.5s;animation-delay:2.5s;-webkit-animation-duration:1s;animation-duration:1s}.imageBackground{height:100%;width:100%;background:url(/dist/img/MountainSea.jpg);background-size:cover;background-repeat:no-repeat;background-attachment:fixed}.shade{height:100%;width:100%;background-color:rgba(0,0,0,.85)}@media only screen and (max-width:755px){.buttonGroups{display:none}}.buttonGroups .buttonGroupRight{position:absolute;top:25px;right:25px;-webkit-animation-delay:3.5s;animation-delay:3.5s;-webkit-animation-duration:1s;animation-duration:1s}.buttonGroups .buttonGroupRight button{margin:0 0 0 20px;color:#fff}.buttonGroups .buttonGroupLeft{position:absolute;top:25px;left:25px;-webkit-animation-delay:3.5s;animation-delay:3.5s;-webkit-animation-duration:1s;animation-duration:1s}.buttonGroups .buttonGroupLeft button{color:#fff}.aboutMe{width:100%;background-color:#e5e5e5;box-shadow:0 0 50px 1px rgba(0,0,0,.75)}.aboutMe .container{width:100%;position:relative}@media only screen and (max-width:755px){.aboutMe .container{top:20px}}@media only screen and (min-width:756px){.aboutMe .container{top:25px;padding:0 0 30px}}@media only screen and (max-width:755px){.aboutMe .container .description{padding:0 0 15px}}.aboutMe .container .profilePicture{text-align:center}.aboutMe .container .profilePicture img{border:3px solid #333;border-radius:200px}@media only screen and (max-width:755px){.aboutMe .container .profilePicture img{width:250px}}.projects{width:100%;position:relative;top:25px}.projects h1{color:#fff}.projectsBackground{background-image:url(/dist/img/Alley.jpg);background-size:cover;background-repeat:no-repeat;background-attachment:fixed;height:100%;width:100%}.projectsBackground .shade{background-color:rgba(0,0,0,.85)}body,html{width:100%;min-width:100%;height:100%;min-height:100%;font-family:Roboto,sans-serif}.center{text-align:center}.justified{text-align:justify}
/*# sourceMappingURL=data:application/json;base64, */
